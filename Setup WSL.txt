#
# Open a windows command prompt, right click the title bar and select "Properties"
# Select the option tab and ensure that "Use legacy console" is NOT selected.
#
# Run Powershell as Admin and run wsl --install to install Ubuntu
#
# Set up the default user
#
sudo apt-get update
sudo apt-get upgrade
sudo apt-get install build-essential libgl1-mesa-dev
sudo apt-get install gdb ninja-build zip cmake
sudo apt-get install libglu1-mesa-dev libxcb-xinerama0 libxcb-cursor0
sudo apt-get install \
    libfontconfig1-dev \
    libfreetype-dev \
    libx11-dev \
    libx11-xcb-dev \
    libxcb-cursor-dev \
    libxcb-glx0-dev \
    libxcb-icccm4-dev \
    libxcb-image0-dev \
    libxcb-keysyms1-dev \
    libxcb-randr0-dev \
    libxcb-render-util0-dev \
    libxcb-shape0-dev \
    libxcb-shm0-dev \
    libxcb-sync-dev \
    libxcb-util-dev \
    libxcb-xfixes0-dev \
    libxcb-xinerama0-dev \
    libxcb-xkb-dev \
    libxcb1-dev \
    libxext-dev \
    libxfixes-dev \
    libxi-dev \
    libxkbcommon-dev \
    libxkbcommon-x11-dev \
    libxrender-dev

mkdir Downloads
cd Downloads
sudo apt-get install firefox

#
# Install fix for Wayland/X11 problems 
# See: <https://stackoverflow.com/questions/79151910/how-to-fix-errors-in-wsl-gui/79151948#79151948>
#
sudo apt-get install gh
gh repo clone viruscamp/wslg-links
cd wslg-links
sudo cp wslg-tmp-x11.service /usr/lib/systemd/system/
sudo cp wslg-runtime-dir.service /usr/lib/systemd/user/

sudo systemctl --global disable pulseaudio.socket

sudo systemctl enable wslg-tmp-x11
sudo systemctl --global enable wslg-runtime-dir

sudo add-apt-repository ppa:oibaf/graphics-drivers
sudo apt update
sudo apt upgrade

#
# Exit WSL at this point and use Powershell to do a wsl --shutdown
# Then restart your WSL session
#
cd Downloads

#
# Download the Qt Online installer for Linux from Qt Website to the Downloads folder
# You might need to change Firefox settings to do that otherwise it will DL to:
# snap/firefox/common/Downloads which may be inconvenient.  If the folder already exists when
# Firefox is installed, the installation may well create a synlink to ~/Downloads which would be OK
#
# Leave the firefox instance running ... for later downloads
#
firefox&
chmod +x qt-online-installer-linux-x64-4.8.1.run
sudo ./qt-online-installer-linux-x64-4.8.1.run
#
# Install boost (1.83.0)
#
sudo apt-get install libboost-all-dev
#
# Download CFITSIO from <https://heasarc.gsfc.nasa.gov/FTP/software/fitsio/c/cfitsio-4.5.0.tar.gz>
# to your Downloads folder, then untar it, build and install CFITSIO
#
tar -zxvf cfitsio-4.5.0.tar.gz
cd cfitsio-4.5.0
./configure --prefix=/usr/local
make
sudo make install
#
# Install libjpeg
#
sudo apt-get install libjpeg-dev
#
# More stuff added 3 Nov '24 16:20
#
# Install Exiv2
#
sudo apt-get install exiv2
#
# SmtpClient 2.0 for Qt
#
sudo apt-get install cmake-gt-gui
gh repo clone bluetiger9/SmtpClient-for-Qt
cd SmtpClient-for-Qt/src
#
# Change the first few lines of CMakeLists.txt so they look like:
# using e.g. nano CMakeLists.txt
#
	cmake_minimum_required(VERSION 3.16)

	project(SmtpMime VERSION 2.0 LANGUAGES C CXX)

	set(CMAKE_AUTOUIC ON)
	set(CMAKE_AUTOMOC ON)
	set(CMAKE_AUTORCC ON)

	set(CMAKE_CXX_STANDARD 17)
	set(CMAKE_CXX_STANDARD_REQUIRED ON)

	find_package(Qt6 6.8 COMPONENTS Core Network REQUIRED)
	
	add_compile_options(-DSMTP_MIME_LIBRARY)

add_compile_options(-DSMTP_MIME_LIBRARY)
#
# create a build directory
#
cd ..
mkdir build
#
# Run cmake-gui
# set the source code as being in the src sub-directory
# set the build directory to be the build sub-directory
# 
# set CMAKE variables as follows:
# 
# CMAKE_INSTALL_PREFIX /usr/local
# CMAKE_MODULE_PATH /usr/share/cmake-3.28/Modules
# CMAKE_PREFIX_PATH /opt/Qt/6.8.0/gcc_64
# 
# then run Configure then Generate (selecting Ninja as the build tool
cmake-gui&
#
# You can now close cmake-gui
#
cd build
ninja
sudo ninja install




